/**
 * @file        md_gpio.h
 * @project		_A_dlib_bitfield_dcl
 *
 * @date        21 May 2017
 * @author      Manuel Del Basso (mainster)
 * @email       manuel.delbasso@gmail.com
 *
 * @ide         Code Composer Studio Version: 7.1.0.00015
 * @license		GNU GPL v3
 *
 * @brief       DESCRIPTION
 *
   @verbatim

	------------------------------------------------------------------------

	Copyright (C) 2017  Manuel Del Basso

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.

	------------------------------------------------------------------------

   @endverbatim
 *
 */
#ifndef MD_GPIO_H_
#define MD_GPIO_H_

#ifdef __cplusplus
extern "C" {
#endif

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Includes  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
#include "md_globals.h"

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Configuration  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~  Public typedefs  ~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
typedef enum {
	GPIO_DRIVER_TYPE_PP = 0x00,
	GPIO_DRIVER_TYPE_PU,
	GPIO_DRIVER_TYPE_OD,
} GPIO_DriverType;

typedef uint32_t GPIO_AlternFunc;

typedef struct {
	uint16_t 		Gpiox;
	GPIO_CoreSelect MasterCore;
	GPIO_Direction 	Direction;
	GPIO_AlternFunc	AlternFunc;
	GPIO_DriverType	DriverType;
	bool			InvertLogic
	uint32_t		InitialState;
} MD_GPIO_t;

static MD_GPIO_t GPIO_configMatrix[] = {
		{
				.Gpiox = LAUNCHPAD_LED_BL,
				.MasterCore = GPIO_CORE_CPU1,
				.Direction = GPIO_DIR_MODE_OUT,
				.AlternFunc = GPIO_34_GPIO34,
				.DriverType = GPIO_PIN_TYPE_STD | GPIO_PIN_TYPE_INVERT, 0 },
};

//#define BOARD_INIT_LEDS() 	EALLOW; \
//		GpioCtrlRegs.GPBMUX1.bit.GPIO31 = 0; \
//		GpioCtrlRegs.GPBDIR.bit.GPIO31 = 1; \
//		GpioDataRegs.GPBSET.bit.GPIO31 = 1; \
//		GpioCtrlRegs.GPBMUX1.bit.GPIO34 = 0; \
//		GpioCtrlRegs.GPBDIR.bit.GPIO34 = 1; \
//		GpioDataRegs.GPBSET.bit.GPIO34 = 1; \
//		EDIS; \
//		GpioDataRegs;


/* ~~~~~~~~~~~~~~~~~~~~~~~  Public macro definitions  ~~~~~~~~~~~~~~~~~~~~~~ */

/* ~~~~~~~~~~~~~~~~~~~~~  Public variable definitions  ~~~~~~~~~~~~~~~~~~~~~ */

/* ~~~~~~~~~~~~~~~~~~~~~~  Public function prototypes  ~~~~~~~~~~~~~~~~~~~~~ */

#ifdef __cplusplus
}
#endif

#endif
